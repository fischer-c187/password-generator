{"mappings":"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","sources":["src/scripts/app.ts"],"sourcesContent":["type RegexElement = {\n  element: HTMLInputElement;\n  condition: RegExp;\n  value: number;\n};\ntype passwordMatch = {\n  symbols: RegexElement;\n  uppercase: RegexElement;\n  lowercase: RegexElement;\n  digit: RegexElement;\n};\n\nconst GENERATE_PASSWORD: passwordMatch = {\n  symbols: {\n    element: document.querySelectorAll(\n      '.setting__checked-option'\n    )[3] as HTMLInputElement,\n    condition: new RegExp('\\\\W'),\n    value: 1,\n  },\n  uppercase: {\n    element: document.querySelectorAll(\n      '.setting__checked-option'\n    )[0] as HTMLInputElement,\n    condition: new RegExp('[A-Z]'),\n    value: 0.5,\n  },\n  lowercase: {\n    element: document.querySelectorAll(\n      '.setting__checked-option'\n    )[1] as HTMLInputElement,\n    condition: new RegExp('[a-z]'),\n    value: 0.5,\n  },\n  digit: {\n    element: document.querySelectorAll(\n      '.setting__checked-option'\n    )[2] as HTMLInputElement,\n    condition: new RegExp('\\\\d'),\n    value: 1,\n  },\n};\nconst CHARACTERS: string[] = [];\nfor (let i = 33; i < 127; i++) {\n  CHARACTERS.push(String.fromCharCode(i));\n}\n\nfunction copyPasswordToClipBoard(): void {\n  const password: HTMLElement | null =\n    document.querySelector('.password__text');\n  if (password) {\n    navigator.clipboard.writeText(password.innerText);\n  }\n}\n\nfunction animationSuccesMessage(): void {\n  const succesMessage: HTMLElement | null =\n    document.querySelector('.password__succes');\n  if (succesMessage) {\n    succesMessage.style.display = 'block';\n    setTimeout(() => {\n      succesMessage.classList.toggle('show');\n    }, 10);\n    setTimeout(() => {\n      succesMessage.classList.toggle('show');\n    }, 2000);\n  }\n}\n\nfunction setProgressColorInRange(): void {\n  const range: HTMLInputElement | null = document.querySelector('.green-range');\n  if (range) {\n    const min: number = Number(range?.min);\n    const max: number = Number(range?.max);\n    const value: number = (100 * Number(range?.value)) / (max - min);\n    range.style.background = `linear-gradient(90deg, rgba(164,255,175,1) ${\n      value - 0.3\n    }%, rgba(24,23,31,1) ${value - 0.3}%)`;\n  }\n}\n\nfunction setValueRange(): void {\n  const range: HTMLInputElement | null = document.querySelector('.green-range');\n  const value: string = range ? range.value : '';\n  const rangeDisplayValue: HTMLElement | null = document.querySelector(\n    '.setting__length-value'\n  );\n  if (rangeDisplayValue) {\n    rangeDisplayValue.innerText = value;\n  }\n}\nfunction generateValidCharsArray(): string[] {\n  let result: string[] = [];\n  Object.values(GENERATE_PASSWORD)\n    .forEach(value => {\n      if (value.element.checked) {\n        result = result.concat(\n          CHARACTERS.filter((char) => value.condition.test(char))\n        );\n      }\n    })\n  return result;\n}\n\nfunction generateRandomPassword(size: number, characters: string[]): string {\n  if (!characters.length) {\n    return '';\n  }\n  return Array(size)\n    .fill('')\n    .map(() => characters[Math.floor(Math.random() * characters.length)])\n    .join('');\n}\n\nfunction evaluateStrengthPassword(password: string): number {\n  if(!password.length) {\n    return 0;\n  }\n  let result: number = password.length >= 10 ? 1 : 0;\n  Object.values(GENERATE_PASSWORD)\n    .forEach(obj => {\n      if (obj.condition.test(password)) {\n        result += obj.value;\n      }\n    })\n  return result;\n}\n\nfunction resetStrengthIcon(): void {\n  const text: HTMLElement | null = document.querySelector('.strength__text')\n  if(text){\n    text.innerHTML = ''\n  }\n  document.querySelectorAll('.strength__icon')\n    .forEach(element => {\n      element.setAttribute('class', 'strength__icon');\n    })\n}\n\nfunction displayStrengthPassword(numberColoredBar: number): void {\n  resetStrengthIcon();\n  const text: HTMLElement | null = document.querySelector('.strength__text')\n  if(!text) {\n    throw new Error('Error: element \\'.stength__text\\' does not exist')\n  }\n  const barColor: HTMLElement[] = Array.from(document.querySelectorAll('.strength__icon'))\n  let classIcon: string = 'strength__icon';\n\n  if(numberColoredBar === 0) {\n    text.innerHTML = '';\n  } else if (numberColoredBar >= 4){\n    text.innerHTML = 'strong';\n    classIcon = 'strength__icon--strong'\n  } else if (numberColoredBar >= 3){\n    text.innerHTML = 'medium';\n    classIcon = 'strength__icon--medium'\n  } else if (numberColoredBar >= 2){\n    text.innerHTML = 'weak';\n    classIcon = 'strength__icon--weak'\n  } else if (numberColoredBar >= 0){\n    text.innerHTML = 'too weak';\n    classIcon = 'strength__icon--too-weak'\n  }\n\n  const nbr: number = numberColoredBar === 1.5 ? 1 : numberColoredBar;\n  for(let i=0; i<nbr; i++){\n    barColor[i].classList.add(classIcon);\n  }\n}\n\n\nfunction main(): void {\n  const rangeElement: HTMLInputElement | null = document.querySelector('.green-range');\n  const passwordElement: HTMLElement | null = document.querySelector('.password__text');\n\n  if(!rangeElement) {\n    throw new Error('Error: element \\'.green-range\\' does not exist')\n  }\n  if(!passwordElement) {\n    throw new Error('Error: element \\'.password__text\\' does not exist')\n  }\n  document.querySelector('.password__copy-icon')\n    ?.addEventListener('click', () => {\n      copyPasswordToClipBoard();\n      animationSuccesMessage();\n    });\n\n  setProgressColorInRange();\n  setValueRange();\n  rangeElement.addEventListener('input', () => {\n    setProgressColorInRange();\n    setValueRange();\n  });\n\n  document.querySelector('.setting__submit')\n    ?.addEventListener('click', (event) => {\n      event.preventDefault();\n      const size: number = rangeElement ? Number(rangeElement.value) : 0;\n      \n      passwordElement.innerText = generateRandomPassword(\n        size,\n        generateValidCharsArray()\n      );\n      displayStrengthPassword(evaluateStrengthPassword(passwordElement.innerText));\n      \n    });\n}\n\nmain();\n"],"names":["GENERATE_PASSWORD","symbols","element","document","querySelectorAll","condition","RegExp","value","uppercase","lowercase","digit","CHARACTERS","i","push","String","fromCharCode","copyPasswordToClipBoard","password","querySelector","navigator","clipboard","writeText","innerText","animationSuccesMessage","succesMessage","style","display","setTimeout","classList","toggle","setProgressColorInRange","range","min","Number","max","background","setValueRange","rangeDisplayValue","generateValidCharsArray","result","Object","values","forEach","checked","concat","filter","char","test","generateRandomPassword","size","characters","length","Array","fill","map","Math","floor","random","join","evaluateStrengthPassword","obj","resetStrengthIcon","text","innerHTML","setAttribute","displayStrengthPassword","numberColoredBar","Error","barColor","from","classIcon","nbr","add","main","rangeElement","passwordElement","addEventListener","event","preventDefault"],"version":3,"file":"index.e78f3876.js.map"}