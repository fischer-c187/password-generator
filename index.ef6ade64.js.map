{"mappings":"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","sources":["src/scripts/app.ts"],"sourcesContent":["type RegexElement = {\n  element: HTMLInputElement;\n  condition: RegExp;\n};\ntype passwordMatch = {\n  symbols: RegexElement;\n  uppercase: RegexElement;\n  lowercase: RegexElement;\n  digit: RegexElement;\n};\n\nconst GENERATE_PASSWORD: passwordMatch = {\n  symbols: {\n    element: document.querySelectorAll(\n      '.setting__checked-option'\n    )[3] as HTMLInputElement,\n    condition: new RegExp('\\\\W'),\n  },\n  uppercase: {\n    element: document.querySelectorAll(\n      '.setting__checked-option'\n    )[0] as HTMLInputElement,\n    condition: new RegExp('[A-Z]'),\n  },\n  lowercase: {\n    element: document.querySelectorAll(\n      '.setting__checked-option'\n    )[1] as HTMLInputElement,\n    condition: new RegExp('[a-z]'),\n  },\n  digit: {\n    element: document.querySelectorAll(\n      '.setting__checked-option'\n    )[2] as HTMLInputElement,\n    condition: new RegExp('\\\\d'),\n  },\n};\nconst CHARACTERS: string[] = [];\nfor (let i = 33; i < 127; i++) {\n  CHARACTERS.push(String.fromCharCode(i));\n}\n\nfunction copyPasswordToClipBoard(): void {\n  const password: HTMLElement | null =\n    document.querySelector('.password__text');\n  if (password) {\n    navigator.clipboard.writeText(password.innerText);\n  }\n}\n\nfunction animationSuccesMessage(): void {\n  const succesMessage: HTMLElement | null =\n    document.querySelector('.password__succes');\n  if (succesMessage) {\n    succesMessage.style.display = 'block';\n    setTimeout(() => {\n      succesMessage.classList.toggle('show');\n    }, 10);\n    setTimeout(() => {\n      succesMessage.classList.toggle('show');\n    }, 2000);\n  }\n}\n\nfunction setProgressColorInRange(): void {\n  const range: HTMLInputElement | null = document.querySelector('.green-range');\n  if (range) {\n    const min: number = Number(range?.min);\n    const max: number = Number(range?.max);\n    const value: number = (100 * Number(range?.value)) / (max - min);\n    range.style.background = `linear-gradient(90deg, rgba(164,255,175,1) ${\n      value - 0.3\n    }%, rgba(24,23,31,1) ${value - 0.3}%)`;\n  }\n}\n\nfunction setValueRange() {\n  const range: HTMLInputElement | null = document.querySelector('.green-range');\n  const value: string = range ? range.value : '';\n  const rangeDisplayValue: HTMLElement | null = document.querySelector(\n    '.setting__length-value'\n  );\n  if (rangeDisplayValue) {\n    rangeDisplayValue.innerText = value;\n  }\n}\nfunction generateValidCharsArray(): string[] {\n  let result: string[] = [];\n  for (let value of Object.values(GENERATE_PASSWORD)) {\n    if (value.element.checked) {\n      result = result.concat(\n        CHARACTERS.filter((char) => value.condition.test(char))\n      );\n    }\n  }\n  return result;\n}\n\nfunction generateRandomPassword(size: number, characters: string[]): string {\n  if (!characters.length) {\n    return '';\n  }\n  return Array(size)\n    .fill('')\n    .map(() => characters[Math.floor(Math.random() * characters.length)])\n    .join('');\n}\n// TODO: peut etre passe les selecteurs au fonction pour rendre celle ci plus generique\nfunction main(): void {\n  const rangeElement: HTMLInputElement | null = document.querySelector('.green-range')\n  const passwordElement: HTMLElement | null = document.querySelector('.password__text')\n  document\n    .querySelector('.password__copy-icon')\n    ?.addEventListener('click', () => {\n      copyPasswordToClipBoard();\n      animationSuccesMessage();\n    });\n  setProgressColorInRange();\n  setValueRange();\n  rangeElement?.addEventListener('input', () => {\n    setProgressColorInRange();\n    setValueRange();\n  });\n  console.log(generateRandomPassword(10, generateValidCharsArray()));\n  document\n    .querySelector('.setting__submit')\n    ?.addEventListener('click', (event) => {\n      event.preventDefault();\n      const size: number = rangeElement ? Number(rangeElement.value) : 0;\n      if(passwordElement){\n        passwordElement.innerText = generateRandomPassword(size, generateValidCharsArray())\n      }\n      \n    });\n}\n\nmain();\n"],"names":[],"version":3,"file":"index.ef6ade64.js.map","sourceRoot":"/__parcel_source_root/"}